<body>
  <% layout('./layouts/sidebar') -%>
    <div class="preloader">
      <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
      </div>
    </div>
    <!-- Page wrapper  -->
    <div class="page-wrapper">

      <!-- Container fluid  -->
      <!-- Container fluid  -->
      <div class="container-fluid">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Buy Package</h4>
            <div class="row">
              <div class="container-fluid">
                <div class="clpricing-table cat-id-10">
                  <div class="container-fluid">
                    <div class="row align-items-center price-table style10">
                      <div class="col-md-12 col-lg-6 col-sm-6 col-xs-12">
                        <div class="cl-pricetable-wrap price-1 category28 ">
                          <div class="top">
                            <div class="cl-header">
                              <h4>Package 1</h4>
                              <h5>STANDARD PLAN</h5>
                            </div>
                          </div>
                          <div class="featured">
                            <ul>
                              <li><i class="feature_icon fa fa-check" aria-hidden="true"></i> Smart Contract Creation
                              </li>
                              <li><i class="feature_icon fa fa-check" aria-hidden="true"></i> Smart Contract Deployment
                              </li>
                            </ul>
                          </div>
                          <div class="bottom">
                            <div class="cl-footer">
                              <div class="dolar">
                                1 <img src="assets/images/icons/xdc.png" width="25" height="25">
                              </div>
                              <% if(sufficientBalance!==true) { %>
                                <h5> Your balance is insufficient. Please recharge your address with XDC </h5>
                                <% } else { %>
                                  <a data-toggle="modal" data-target="#paymentConfirmationModal"
                                    data-whatever="@getbootstrap" class="btn-table btn-rounded btn-1 hvr-sweep-to-right"
                                    onclick="sendOTP()">Buy Now</a>
                                  <% } %>
                            </div>
                            <div class="bancor-wc" style="display:block" id="bancor-wc-id-1"></div>
                            <div id="metamaskButton" style="display:none">
                              <br>
                              <h5> You seem to be using XDCPay wallet </h5>
                              <a data-whatever="@getbootstrap" class="btn btn-rounded btn-lg btn-info mr-1"
                                onclick="buyMetamask()">Buy
                                Using XDCPay</a><br><br>
                              <h5>If you have Paypal account then buy using paypal </h5>
                              <a class="btn btn-rounded btn-lg btn-info mr-1" href="/paypal/direct"> Paypal</a>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-12 col-lg-6 col-sm-6 col-xs-12">
                        <div class="cl-pricetable-wrap price-2 category29 popular_plan">
                          <div class="top">
                            <span class="popular">COMING SOON</span>
                            <div class="cl-header">
                              <h4>Package 2</h4>
                              <h5>PREMIUM PLAN</h5>
                            </div>
                          </div>
                          <div class="featured">
                            <ul>
                              <li><i class="feature_icon fa fa-check" aria-hidden="true"></i> Smart Contract Creation
                              </li>
                              <li><i class="feature_icon fa fa-check" aria-hidden="true"></i> Smart Contract Deployment
                              </li>
                              <li><i class="feature_icon fa fa-check" aria-hidden="true"></i> ICO Platfrom with
                                Dashboard
                              </li>
                            </ul>
                          </div>
                          <div class="bottom">
                            <div class="cl-footer">
                              <div class="dolar">Coming Soon!</div>
                              <a href="#" class="btn-table btn-1 hvr-sweep-to-right">Order Now</a>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

          </div>

        </div>
        <!-- End Container fluid  -->

        <!-- Payment Confirmation modal Start-->
        <div class="modal fade bs-example-modal-lg" id="paymentConfirmationModal" tabindex="-1" role="dialog"
          aria-labelledby="paymentConfirmationModal">
          <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title" id="exampleModalLabel1">Payment Confirmation</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                    aria-hidden="true">&times;</span></button>
              </div>
              <div class="modal-body mb-3">
                <!-- <form action="/payment" method="GET">
                                <div class="form-group row">
                                    <label for="example-text-input" class="col-2 col-form-label">OTP</label>
                                    <div class="col-10">
                                        <input type="text" class="form-control" id="otpvalue" placeholder="Enter OTP">
                                    </div>
                                </div>
                                <div class="text-center">
                                        <button type="submit" class="btn btn-rounded btn-lg btn-info">Make Payment</button>
                                    <button type="button" class="btn btn-rounded btn-lg btn-info"  onclick="makePayment()">Make Payment</button>
                                </div>
                            </form> -->
                <form action="/payment">
                  <label class="col-12 col-form-label">Confirmation Email is sent. Please enter OTP sent to you on your
                    Registerd
                    Email</label>
                  <label for="example-text-input" class="col-2 col-form-label">OTP</label>
                  <input type="text" class="form-control" name="otpValue"><br>
                  <div class="text-center">
                    <input type="submit" class="btn btn-rounded btn-lg btn-info" value="Submit">
                  </div>
                </form>
              </div>
            </div>
          </div>

        </div>
      </div>
      <!-- / Payment Confirmation modal End -->
</body>
<script>
  // function makePayment() {
  //     var otp = $("#otpvalue").val();
  //     console.log("inside otpaymentp",otp)
  //      $.get("/payment?otpvalue="+otp).then(function (result,error) {
  //         console.log(result,error);
  //         if(result.status)
  //      })

  // }

  function sendOTP() {
    console.log("inside otp")
    $.get("/payment")
  }

</script>
<script>
  $(document).keydown(function (event) {
    if (event.keyCode == 123) { // Prevent F12
      return false;
    } else if (event.ctrlKey && event.shiftKey && event.keyCode == 73) { // Prevent Ctrl+Shift+I
      return false;
    }
  });
  $(document).on("contextmenu", function (e) {
    e.preventDefault();
  });
</script>
<script>
  checkMetamask();
  function checkMetamask() {
    if (typeof web3 !== 'undefined') {
      window.web3 = new Web3(web3.currentProvider)
      // window.web3 = new Web3(new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/YOUR-PROJECT-ID'))

      console.log("web3.currentProvider ==============>>>>>>>>", web3.currentProvider)
      $("#metamaskButton").get(0).style.display = '';
      $('#bancor-wc-id-1').hide();
    } else {
      $('#bancor-wc-id-1').show();
    }
  }
  function buyMetamask() {
    window.web3.eth.net.getNetworkType().then(networkType => {
      window.ethereum.enable().then(add => {
        window.web3.currentProvider.selectedAddress = add[0]
        if (networkType != 'main') {

          getPaymentToken(window.web3.currentProvider.selectedAddress, networkType);
        } else {
          getPaymentToken(window.web3.currentProvider.selectedAddress);
        }
      });
    })
  }

  function sendPaymentInfo() {
    $.ajax({
      type: 'POST',
      url: '/api/sendPaymentInfo',
      success: function (data) {
        var values = {}
        if (window.sessionStorage.getItem("tokenName")) {
          values = {
            token_name: window.sessionStorage.getItem("tokenName"),
            token_symbol: window.sessionStorage.getItem("tokenSymbol"),
            token_decimals: window.sessionStorage.getItem("tokenDecimals"),
            token_supply: window.sessionStorage.getItem("tokenSupply"),
            token_sale: window.sessionStorage.getItem("tokenSale"),
            eth_tokens: window.sessionStorage.getItem("ethTokens"),
            additional: 'sometext'
          }
        }
        $.ajax({
          type: 'POST',
          url: '/createERC20Contract',
          data: values,
          success: function (data) {
            window.setTimeout(function () {
              document.location.href = '/generatedContract'
              window.sessionStorage.clear()
            }, 3000)
          },
          dataType: 'html'
        });
        // document.location.href = '/generatedContract'
      },
      error: function (data) {
      },
      contentType: "application/json",
      dataType: 'json'
    });
  }

  function getPaymentToken(address) {
    $.ajax({
      type: 'POST',
      url: '/api/getPaymentToken',
      data: JSON.stringify({ "address": address }),
      success: function (data) {
        // console.log('in getPaymentToken Success>>>>')
        sendTransaction();
      },
      contentType: "application/json",
      dataType: 'json'
    });
  }

  async function sendTransaction() {
    // console.log('in sendTransaction>>>>')
    var contractInstance = new window.web3.eth.Contract(xdce_abi, xdce_address);
    // const priceUsd = (await $.get("https://blockdegree.org/api/wrapCoinMarketCap")).data;
    // const priceXdc = Math.floor(50/priceUsd)

    const priceUsd = 1;
    const priceXdc = 1;
    // console.log(window.web3.currentProvider.publicConfigStore.getState().selectedAddress,"address")
    var transaction = {
      "from": window.web3.currentProvider.selectedAddress,
      "to": "0x41ab1b6fcbb2fa9dced81acbdec13ea6315f2bf2",
      "value": "0x0",
      "gas": 105015,
      "data": contractInstance.methods.transfer("0x920e938a80fa1669b608166741eeb01de6c57402", `${priceXdc}`).encodeABI()
    };
    window.web3.eth.sendTransaction(transaction, (err, data) => {
      // console.log('in sendTransaction web3>>>>', window.web3.currentProvider.selectedAddress, contractInstance)
      if (err) {
        console.log("Failed");
      } else {
        sendPaymentInfo();
        console.log("in sendTransaction Successful");
      }
    });
  }
</script>
<script src="https://widget-convert.bancor.network/v1"></script>
<script>
  const widgetInstance = BancorConvertWidget.createInstance({
    "type": "2",
    "blockchainType": "ethereum",
    "baseCurrencyId": "5a60937501b4a8000153a22e",
    "pairCurrencyId": "5937d635231e97001f744267",
    "primaryColor": "#0d7491",
    "widgetContainerId": "bancor-wc-id-1",
    "displayCurrency": "USD",
    "hideVolume": true
  });
</script>
<script>
  window.addEventListener('load', async () => {
    // Modern dapp browsers...
    if (window.ethereum) {
      window.web3 = new Web3(ethereum);
      try {
        // Request account access if needed
        await ethereum.enable();
        window.web3.eth.net.getNetworkType().then(networkType => {
          if (networkType != 'main') {
            console.log(networkType, "networkType")
            window.alert("Please change network in your XDCPay to Mainnet");
          }
          else {
            // getPaymentToken(window.web3.currentProvider.publicConfigStore.getState().selectedAddress);
          }
        });
        // web3.eth.sendTransaction({/* ... */ });
      } catch (error) {
        // User denied account access...
      }
    }
    // Legacy dapp browsers...
    else if (window.web3) {
      window.web3 = new Web3(web3.currentProvider);
      console.log("web3.currentProvider=================>>>>>>> 328", web3.currentProvider)
      // Acccounts always exposed
      web3.eth.sendTransaction({/* ... */ });
    }
    // Non-dapp browsers...
    else {
      console.log('Non-Ethereum browser detected. You should consider trying XDCPay!');
    }
  });

</script>

</html>
<!DOCTYPE html>
<html lang="en" ng-app="mewApp">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="icon" type="image/png" sizes="16x16" href="assets/images/favicon.png">
  <title>Gravitas</title>
  <!-- Custom CSS -->
  <link rel="stylesheet" href="css/etherwallet-master.min.css">
  <link href="assets/libs/toastr/toastr.min.css" rel="stylesheet">
  <!-- Custom CSS -->
  <link href="assets/css/style.min.css" rel="stylesheet">
  <link href="assets/css/custom.css" rel="stylesheet">
  <meta property="og:title" content="MyEtherWallet.com: Your Key to Ethereum">
  <meta property="og:site_name" content="MyEtherWallet.com: Your Key to Ethereum">
  <meta name="twitter:title" content="MyEtherWallet.com: Your Key to Ethereum">
  <meta name="apple-mobile-web-app-title" content="MyEtherWallet.com: Your Key to Ethereum">
  <meta content="https://www.myetherwallet.com" property="og:url">
  <meta content="https://www.myetherwallet.com" name="twitter:url">

  <script type="text/javascript" src="js/etherwallet-static.min.js"></script>
  <script type="text/javascript" src="js/etherwallet-master.js"></script>
  <meta name="description" content="MyEtherWallet (MEW) is a free, open-source, client-side interface for generating Ethereum wallets & more. Interact with the Ethereum blockchain easily & securely.">
  <meta property="og:description" content="Free, open-source, client-side Ethereum wallet. Enabling you to interact with the blockchain easily & securely.">
  <meta name="twitter:description" content="Free, open-source, client-side Ethereum wallet. Enabling you to interact with the blockchain easily & securely.">
  <meta name="robots" content="index,follow">
  <meta name="googlebot" content="index,follow">
  <meta name="google-site-verification" content="IpChQ00NYUQuNs_7Xs6xlnSdzalOlTUYbBsr8f7OpvM" />

  <meta name="apple-mobile-web-app-title" content="MyEtherWallet &middot; Your Key to Ethereum">
  <meta name="application-name" content="MyEtherWallet">
  <meta name="msapplication-config" content="images/fav/browserconfig.xml">
  <meta name="theme-color" content="#1d6986">
  <meta name="apple-mobile-web-app-status-bar-style" content="#1d6986">
  <meta property="og:url" content="https://www.myetherwallet.com" />
  <meta property="og:title" content="MyEtherWallet.com  &middot; Your Key to Ethereum" />
  <meta property="og:type" content="website">
  <meta property="og:image" content="/images/myetherwallet-logo-banner.png" />
  <meta property="og:image" content="/images/myetherwallet-logo.png" />
  <meta property="og:image" content="/images/myetherwallet-logo-square.png" />
  <meta property="og:image" content="/images/myetherwallet-banner-fun.jpg" />
  <meta name="twitter:image" content="/images/myetherwallet-logo-twitter.png">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:site" content="@MyEtherWallet">
  <meta name="twitter:creator" content="@MyEtherWallet">
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "Organization",
      "name": "MyEtherWallet",
      "legalName": "MyEtherWallet Inc",
      "url": "https://www.myetherwallet.com/",
      "contactPoint": [{
        "@type": "ContactPoint",
        "email": "support@myetherwallet.com",
        "url": "https://myetherwallet.com",
        "contactType": "customer service"
      }],
      "logo": "https://www.myetherwallet.com/images/myetherwallet-logo.png",
      "description": "MyEtherWallet.com is a free, open-source, client-side interface for generating Ethereum wallets &amp; more. Interact with the Ethereum blockchain easily &amp; securely.",
      "sameAs": [
        "https://www.myetherwallet.com/",
        "https://chrome.google.com/webstore/detail/myetherwallet-cx/nlbmnnijcnlegkjjpcfjclmcfggfefdm",
        "https://www.facebook.com/MyEtherWallet/",
        "https://twitter.com/myetherwallet",
        "https://medium.com/@myetherwallet",
        "https://myetherwallet.github.io/knowledge-base/",
        "https://github.com/kvhnuke/etherwallet",
        "https://github.com/MyEtherWallet",
        "https://kvhnuke.github.io/etherwallet/", "https://myetherwallet.slack.com/"
      ]
    }
  </script>
  <style>
    /* Center the loader */
    #loader {
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: 1;
      width: 150px;
      height: 150px;
      margin: -75px 0 0 -75px;
      border: 16px solid #f3f3f3;
      border-radius: 50%;
      border-top: 16px solid #3498db;
      width: 120px;
      height: 120px;
      -webkit-animation: spin 2s linear infinite;
      animation: spin 2s linear infinite;
    }

    @-webkit-keyframes spin {
      0% {
        -webkit-transform: rotate(0deg);
      }
      100% {
        -webkit-transform: rotate(360deg);
      }
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    /* Add animation to "page content" */
    .animate-bottom {
      position: relative;
      -webkit-animation-name: animatebottom;
      -webkit-animation-duration: 1s;
      animation-name: animatebottom;
      animation-duration: 1s
    }

    @-webkit-keyframes animatebottom {
      from {
        bottom: -100px;
        opacity: 0
      }
      to {
        bottom: 0px;
        opacity: 1
      }
    }

    @keyframes animatebottom {
      from {
        bottom: -100px;
        opacity: 0
      }
      to {
        bottom: 0;
        opacity: 1
      }
    }

    #myDiv {
      display: none;
      text-align: center;
    }
  </style>
  <script>
    var myVar;

    function myFunction() {
      myVar = setTimeout(showPage, 3000);
    }

    function showPage() {
      document.getElementById("loader").style.display = "none";
      document.getElementById("myDiv").style.display = "block";
    }
  </script>
</head>
<style>
  body {

    background-image: linear-gradient(180deg, rgba(53, 53, 138, 0.623), white);
    /* Standard syntax (must be last) */

  }
</style>

<body style="margin:0;">
  <!-- Main wrapper -->
  <% layout('./layouts/sidebar') -%>

    <!-- Topbar header -->
    <div class="preloader">
      <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
      </div>
    </div>
    <!-- Page wrapper  -->
    <div onload="loader" class="page-wrapper">

      <!-- Container fluid  -->
      <div class="container-fluid">
        <div class="card" style="min-height:500px;">
          <div class="card-body">
            <h4 class="card-title">Deploy Contract</h4>
            <!-- <a translate="NAV_DeployContract"
             ng-class="{'isActive': visibility=='deployView'}"
             ng-click="setVisibility('deployView')">
              Deploy Contract
          </a> -->

            <div class="{{curNode.name}} {{curNode.service}} {{curNode.service}} nav-index-{{gService.currentTab}}" aria-label="header"
              ng-controller='tabsCtrl'>


              <!-- <section class="bg-gradient header-branding"> -->
              <!-- <section class="container"> -->




              <div class="tagline">
                <span> Select your network: </span>



                <!-- Warning: The separators you see on the frontend are in styles/etherwallet-custom.less. If you add / change a node, you have to adjust these. Ping tayvano if you're not a CSS wizard -->
                <span class="dropdown dropdown-node" ng-cloak>
                  <a tabindex="0" aria-haspopup="true" aria-label="change node. current node {{curNode.name}} node by {{curNode.service}}"
                    class="dropdown-toggle  btn btn-white" ng-click="dropdownNode = !dropdownNode">
                    <!-- <span translate="X_Network"></span> -->
                    {{curNode.name}}
                    <small>({{curNode.service}})</small>
                    <!-- <i class="caret"></i> -->
                  </a>
                  <ul class="dropdown-menu2" ng-show="dropdownNode">
                    <li ng-repeat="(key, value) in nodeList">
                      <a ng-class="{true:'active'}[curNode == key]" ng-click="changeNode(key)">
                        {{value.name}}
                        <small> ({{value.service}}) </small>
                        <img ng-show="value.service=='Custom'" src="images/icon-remove.svg" class="node-remove" title="Remove Custom Node" ng-click="removeNodeFromLocal(value.name)"
                        />
                      </a>
                    </li>
                    <li>
                      <a ng-click="customNodeModal.open(); dropdownNode = !dropdownNode;" translate="X_Network_Custom">
                        Add Custom Network / Node
                      </a>
                    </li>
                  </ul>
                </span>

              </div>
              <!-- </section> -->
              <!-- </section> -->



              <article class="modal fade" id="customNodeModal" tabindex="-1">
                <section class="modal-dialog">
                  <section class="modal-content">

                    <div class="modal-body">
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close Dialog">&times;</button>

                      <h2 class="modal-title text-info" translate="NODE_Title"> Set Up Your Custom Node </h2>

                      <p class="small"><a href="https://myetherwallet.github.io/knowledge-base/networks/run-your-own-node-with-myetherwallet.html"
                          target="_blank" rel="noopener noreferrer"> Instructions can be found here </a></p>

                      <div ng-show="browserProtocol=='https:'" class="alert alert-danger small" translate="NODE_Warning">
                        Your node must be HTTPS in order to connect to it via MyEtherWallet.com. You can [download the MyEtherWallet repo & run it
                        locally](https://github.com/kvhnuke/etherwallet/releases/latest) to connect to your local node. Or,
                        get free SSL certificate via [LetsEncrypt](https://letsencrypt.org/)</a>.
                      </div>

                      <section class="row">
                        <div class="clearfix col-xs-12">
                          <label translate="NODE_Name">Node Name</label>
                          <input class="form-control" type="text" placeholder="My ETH Node" ng-model="customNode.name" ng-class="Validator.isAlphaNumericSpace(customNode.name) ? 'is-valid' : 'is-invalid'">
                        </div>

                        <div class="clearfix col-xs-9">
                          <label>URL</label>
                          <input class="form-control" type="text" placeholder="http://127.0.0.1" ng-model="customNode.url" ng-class="checkNodeUrl(customNode.url) ? 'is-valid' : 'is-invalid'">
                        </div>

                        <div class="clearfix col-xs-3">
                          <label class="NODE_Port">Port</label>
                          <input class="form-control" type="text" placeholder="8545" ng-model="customNode.port" ng-class="Validator.isPositiveNumber(customNode.port) || customNode.port=='' ? 'is-valid' : 'is-invalid'">
                        </div>

                        <div class="clearfix col-xs-12">
                          <label><input type="checkbox" ng-model="customNode.httpBasicAuth" ng-true-value="{user:'',password:''}"
                              ng-false-value="null" value="false"> HTTP Basic access authentication </label>
                        </div>

                        <div class="clearfix col-xs-6" ng-show="customNode.httpBasicAuth">
                          <label>User</label>
                          <input class="form-control" type="text" ng-model="customNode.httpBasicAuth.user" ng-class="customNode.httpBasicAuth &amp;&amp; customNode.httpBasicAuth.user.length > 0 ? 'is-valid' : 'is-invalid'">
                        </div>

                        <div class="clearfix col-xs-6" ng-show="customNode.httpBasicAuth">
                          <label>Password</label>
                          <input class="form-control" type="password" ng-model="customNode.httpBasicAuth.password" ng-class="customNode.httpBasicAuth &amp;&amp; customNode.httpBasicAuth.password.length > 0 ? 'is-valid' : 'is-invalid'">
                        </div>

                        <div class="clearfix col-xs-12 radio">
                          <label><input name="options" type="radio" ng-model="customNode.options" value="eth"> ETH </label>
                          <label><input name="options" type="radio" ng-model="customNode.options" value="etc"> ETC </label>
                          <label><input name="options" type="radio" ng-model="customNode.options" value="rop"> Ropsten </label>
                          <label><input name="options" type="radio" ng-model="customNode.options" value="kov"> Kovan </label>
                          <label><input name="options" type="radio" ng-model="customNode.options" value="rin"> Rinkeby </label>
                          <label><input name="options" type="radio" ng-model="customNode.options" value="cus"> Custom </label>
                          <label><input type="checkbox" ng-model="customNode.eip155" value="true"> Supports EIP-155 </label>
                        </div>

                        <div class="clearfix col-sm-6 col-sm-offset-6" ng-show="customNode.eip155">
                          <label>Chain ID</label>
                          <input class="form-control" type="text" placeholder="" ng-model="customNode.chainId" ng-class="Validator.isPositiveNumber(customNode.chainId) ? 'is-valid' : 'is-invalid'">
                        </div>
                      </section>

                    </div>

                    <div class="modal-footer">
                      <button class="btn btn-default" data-dismiss="modal" translate="x_Cancel">
                        Cancel
                      </button>
                      <button class="btn btn-rounded btn-info" ng-click="saveCustomNode()" translate="NODE_CTA">
                        Save &amp; Use Custom Node
                      </button>
                    </div>


                  </section>
                </section>
              </article>



            </div>


            <section class="container" style="min-height: 50%" ng-controller='viewCtrl'>

              <div class="tab-content">


                <main class="tab-pane contracts active" ng-if="globalService.currentTab==globalService.tabs.contracts.id" ng-controller='contractsCtrl'
                  ng-cloak>

                  <!-- Title -->
                  <!-- / Title -->

                  <!-- Interact Contracts -->
                  <article class="row block" ng-show="visibility=='interactView'" ng-init="logged_in_user = {req.session.user}">


                    <!-- Address -->
                    <section class="col-sm-6 clearfix">
                      <div class="row">
                        <address-field labeltranslated="CONTRACT_Title" var-name="contract.address"></address-field>
                      </div>
                    </section>

                    <!-- Select Contract Dropdown -->
                    <section class="col-sm-6 clearfix">
                      <label translate="CONTRACT_Title_2">
                        Select Existing Contract
                      </label>

                      <div class="dropdown">

                        <a class="btn btn-default dropdown-toggle" class="dropdown-toggle" ng-click="dropdownExistingContracts = !dropdownExistingContracts">
                          {{selectedAbi.name}}
                          <small class="mono">{{selectedAbi.address}}</small>
                          <i class="caret"></i>
                        </a>

                        <ul class="dropdown-menu dropdown-menu-left" ng-show="dropdownExistingContracts">
                          <li ng-repeat="abi in ajaxReq.abiList track by $index">
                            <a ng-click="selectExistingAbi($index)">
                              {{abi.name}}
                              <small class="mono">{{abi.address}}</small>
                            </a>
                          </li>
                        </ul>
                      </div>
                    </section>

                    <!-- ABI Textarea -->
                    <section class="col-xs-12 clearfix">
                      <label translate="CONTRACT_Json">
                        ABI / JSON Interface
                      </label>
                      <textarea class="form-control" rows="6" placeholder='[{ "type":"contructor", "inputs": [{ "name":"param1", "type":"uint256", "indexed":true }], "name":"Event" }, { "type":"function", "inputs": [{"name":"a", "type":"uint256"}], "name":"foo", "outputs": [] }] '
                        ng-class="Validator.isJSON(contract.abi) ? 'is-valid' : 'is-invalid'" ng-model="contract.abi"></textarea>
                    </section>

                    <!-- Button -->
                    <section class="col-xs-12 clearfix">
                      <button class="btn btn-rounded btn-info" ng-click="initContract()" translate="x_Access"> ACCESS </button>
                    </section>



                  </article>

                  <article class="row block" ng-show="visibility=='interactView' && showReadWrite">

                    <!-- STEP READ/WRITE -->
                    <section class="col-xs-12 clearfix">

                      <!-- Contract Info CONTRACT_Interact_CTA -->
                      <span class="form-group">
                        <h4 translate="CONTRACT_Interact_Title">
                          Read / Write Contract
                        </h4>
                        <h5> {{ contract.address }} </h5>

                        <div class="form-group well" ng-show="contract.address=='0x0101010101010101010101010101010101010101' || contract.address=='0x1010101010101010101010101010101010101010'">
                          <p class="CONTRACT_Helper_1">
                            Please change the address to your own Multisig Contract Address.
                          </p>
                        </div>

                        <div class="form-group well" ng-show="contract.address=='0xd0a6E6C54DbC68Db5db3A091B171A77407Ff7ccf'">
                          <ol>
                            <li translate="EOS_01">
                              Generate EOS Key-pair
                            </li>
                            <li>
                              <span translate="EOS_02">
                                Register / Map your EOS Key
                              </span>
                              <ul>
                                <li translate="EOS_03">
                                  Select `register`
                                </li>
                                <li translate="EOS_04">
                                  Enter your **EOS Public Key**
                                  <--- CAREFUL! EOS PUBLIC KEY! </li>
                                    <li>
                                      Unlock wallet</li>
                                    <li>
                                      <span translate="SEND_amount"> Amount to Send </span> :
                                      <code>0</code> &middot;
                                      <span translate="TRANS_gas">Gas Limit</span>: at least <code>90000</code>
                                    </li>
                              </ul>
                              </li>
                              <li>
                                <span translate="EOS_05">
                                  Fund EOS Contract on Send Page
                                </span>
                                <ul>
                                  <li translate="EOS_06">
                                    Go to Send Ether & Tokens Page
                                  </li>
                                  <li translate="EOS_07">
                                    Unlock same wallet you are unlocking here.
                                  </li>
                                  <li translate="EOS_08">
                                    Send Amount you want to Contribute to `0xd0a6E6C54DbC68Db5db3A091B171A77407Ff7ccf`
                                  </li>
                                  <li>
                                    <span translate="TRANS_gas">Gas Limit</span>: at least <code>90000</code>
                                  </li>
                                </ul>
                              </li>
                              <li>
                                <span translate="EOS_09">
                                  Claim EOS Tokens
                                </span>
                                <ul>
                                  <li translate="EOS_10">
                                    Select `claimAll`.
                                  </li>
                                  <li translate="ADD_Label_6">
                                    Unlock wallet
                                  </li>
                                  <li>
                                    <span translate="SEND_amount">Amount to Send</span>:
                                    <code>0</code> &middot;
                                    <span translate="TRANS_gas">Gas Limit</span>: at least <code>90000</code>
                                  </li>
                                </ul>
                              </li>
                        </div>

                        <div class="btn-group">
                          <a class="btn btn-default" ng-click="dropdownContracts = !dropdownContracts">
                            {{contract.selectedFunc==null ? "Select a function" : contract.selectedFunc.name}}
                            <i class="caret"></i>
                          </a>
                          <ul class="dropdown-menu" ng-show="dropdownContracts">
                            <li ng-repeat="func in contract.functions track by $index">
                              <a ng-click="selectFunc($index)">
                                {{func.name}}
                              </a>
                            </li>
                          </ul>
                        </div>
                      </span>

                      <!-- Write -->
                      <span class="form-group" ng-show="contract.selectedFunc!=null">
                        <div ng-repeat="input in contract.functions[contract.selectedFunc.index].inputs track by $index">
                          <div ng-switch on="input.type">

                            <div class="item write-address" ng-switch-when="address">
                              <label>
                                {{input.name}}
                                <small>{{input.type}}</small>
                              </label>
                              <div class="row">
                                <div class="col-xs-11">
                                  <input class="form-control" type="text" placeholder="0x314156..." ng-model="input.value" ng-class="Validator.isValidAddress(input.value) ? 'is-valid' : 'is-invalid'"
                                  />
                                </div>
                                <div class="col-xs-1">
                                  <div class="addressIdenticon med" title="Address Indenticon" blockie-address="{{input.value}}" watch-var="input.value">
                                  </div>
                                </div>
                              </div>
                            </div>

                            <p class="item write-unit256" ng-switch-when="uint256">
                              <label>
                                {{input.name}} <small> {{input.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="151" ng-model="input.value" ng-class="Validator.isPositiveNumber(input.value) ? 'is-valid' : 'is-invalid'"
                              />
                            </p>

                            <p class="item write-string" ng-switch-when="string">
                              <label>
                                {{input.name}} <small> {{input.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="Ohh! Shiny!" ng-model="input.value" ng-class="input.value!='' ? 'is-valid' : 'is-invalid'"
                              />
                            </p>

                            <p class="item write-bytes" ng-switch-when="bytes">
                              <label>
                                {{input.name}} <small> {{input.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="0x151bc..." ng-model="input.value" ng-class="Validator.isValidHex(input.value) ? 'is-valid' : 'is-invalid'"
                              />
                            </p>

                            <p class="item write-boolean" ng-switch-when="bool">
                              <label>
                                {{input.name}} <small> {{input.type}} </small>
                              </label>
                              <span class="radio">
                                <label>
                                  <input ng-model="input.value" type="radio" name="optradio-{{input.name}}" ng-value="true">                                  True
                                </label>
                              </span>
                              <span class="radio">
                                <label>
                                  <input ng-model="input.value" type="radio" name="optradio-{{input.name}}" ng-value="false">                                  False
                                </label>
                              </span>
                            </p>
                            <p class="item" ng-switch-default>
                              <label> {{input.name}} <small> {{input.type}} </small> </label>
                              <input class="form-control" type="text" placeholder="" ng-model="input.value" ng-class="input.value!='' ? 'is-valid' : 'is-invalid'"
                              />
                            </p>

                          </div>
                        </div>
                      </span>
                      <!-- / Write -->


                      <!-- Output -->
                      <span class="form-group output" ng-show="contract.functions[contract.selectedFunc.index].constant">
                        <div ng-repeat="output in contract.functions[contract.selectedFunc.index].outputs track by $index" class="form-group">
                          <div ng-switch on="output.type">

                            <!-- Address -->
                            <div class="item write-address" ng-switch-when="address">
                              <label> &#8627; {{output.name}} <small> {{output.type}} </small> </label>
                              <div class="row">
                                <div class="col-xs-11"><input class="form-control" type="text" placeholder="0x314156..."
                                    ng-model="output.value" readonly /></div>
                                <div class="col-xs-1">
                                  <div class="addressIdenticon med" title="Address Indenticon" blockie-address="{{output.value}}" watch-var="output.value">
                                  </div>
                                </div>
                              </div>
                            </div>

                            <!-- unit256 -->
                            <p class="item write-unit256" ng-switch-when="uint256">
                              <label>
                                &#8627; {{output.name}}
                                <small> {{output.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="151" ng-model="output.value" readonly />
                            </p>

                            <!-- Address -->
                            <p class="item write-string" ng-switch-when="string">
                              <label>
                                &#8627; {{output.name}}
                                <small> {{output.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="Ohh! Shiny!" ng-model="output.value" readonly />
                            </p>

                            <!-- Bytes -->
                            <p class="item write-bytes" ng-switch-when="bytes">
                              <label>
                                &#8627; {{output.name}}
                                <small> {{output.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="0x151bc..." ng-model="output.value" readonly />
                            </p>

                            <!-- Boolean -->
                            <p class="item write-boolean" ng-switch-when="bool">
                              <label>
                                &#8627; {{output.name}}
                                <small> {{output.type}} </small>
                              </label>
                              <span ng-show="output.value==true" class="output-boolean-true"> <img src="images/icon-check-green.svg"
                                  width="22px" height="22px" /> TRUE </span>
                              <span ng-show="output.value==false" class="output-boolean-false"> <img src="images/icon-x.svg"
                                  width="22px" height="22px" /> FALSE </span>
                            </p>

                            <!--  -->
                            <p class="item" ng-switch-default>
                              <label>
                                &#8627; {{output.name}}
                                <small> {{output.type}} </small>
                              </label>
                              <input class="form-control" type="text" placeholder="" ng-model="output.value" readonly />
                            </p>
                          </div>
                        </div>
                      </span>
                      <!-- / Output -->


                    </section>



                  </article>

                  <article ng-show="visibility=='interactView'">

                    <article class="modal fade" id="sendContract" tabindex="-1">
                      <section class="modal-dialog">
                        <section class="modal-content">

                          <div class="modal-body">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close Dialog">&times;</button>

                            <div ng-show="wd">

                              <h2 class="modal-title text-danger" translate="SENDModal_Title">
                                Warning!
                              </h2>

                              <p translate="CONTRACT_Warning_3">
                                You are about to **execute a function on contract**.
                              </p>
                              <p>
                                <span translate="CONTRACT_Warning_2">
                                  It will be deployed on the following network:
                                </span>
                                <strong>{{ajaxReq.type}}</strong> ({{ajaxReq.service}}).
                              </p>


                              <label>
                                <span translate="SEND_amount">
                                  Amount
                                </span>
                                <em translate="SEND_Helper_Contract">
                                  In most cases you should leave this as 0.
                                </em>
                              </label>
                              <input class="form-control" type="text" placeholder="0" ng-model="tx.value" ng-class="Validator.isPositiveNumber(tx.value) ? 'is-valid' : 'is-invalid'"
                              />

                              <label translate="TRANS_gas">
                                Gas
                              </label>
                              <input class="form-control" type="text" placeholder="300000" ng-model="tx.gasLimit" ng-class="Validator.isPositiveNumber(tx.gasLimit) ? 'is-valid' : 'is-invalid'"
                              />

                              <a class="btn btn-info btn-block" ng-click="generateTx()" translate="SEND_generate">
                                Generate Transaction
                              </a>

                              <!-- Data -->
                              <section class="row" ng-show="showRaw">
                                <!-- Raw TX -->
                                <div class="form-group col-sm-6">
                                  <h4 translate="SEND_raw">
                                    Raw Transaction
                                  </h4>
                                  <textarea class="form-control" rows="3" readonly>{{rawTx}}</textarea>
                                </div>
                                <!-- Singed TX -->
                                <div class="form-group col-sm-6">
                                  <h4 translate="SEND_signed">
                                    Signed Transaction
                                  </h4>
                                  <textarea class="form-control" rows="3" readonly>{{signedTx}}</textarea>
                                </div>
                              </section>

                            </div>
                          </div>


                          <div class="modal-footer" ng-show="showRaw">
                            <button class="btn btn-rounded btn-info" data-dismiss="modal" translate="SENDModal_No">
                              No, get me out of here!
                            </button>
                            <button class="btn btn-rounded btn-info" ng-click="sendTx()" translate="SENDModal_Yes">
                              Yes, I am sure! Make transaction.
                            </button>
                          </div>

                        </section>
                      </section>
                    </article>




                  </article>
                  <!-- / Interact Contracts -->



                  <!-- Deploy Contract -->
                  <article class="row block" ng-show="visibility=='deployView'">

                    <section class="col-sm-12">
                      <!-- Topbar header -->

                      <!-- Byte Code -->
                      <div class="form-group">
                        <h4 translate="CONTRACT_ByteCode">
                          Byte Code:
                        </h4>
                        <textarea class="form-control" rows="8" ng-model="tx.data" ng-class="Validator.isValidHex(tx.data)&&tx.data!='' ? 'is-valid' : 'is-invalid'"
                          placeholder={{tx.bytecode}}></textarea>
                      </div>

                      <!-- Gas -->
                      <!-- <div class="form-group">
        <h4 translate="TRANS_gas">Gas:</h4>
        <input class="form-control"
           type="text"
           placeholder="300000"
           ng-model="tx.gasLimit"
           ng-class="Validator.isPositiveNumber(tx.gasLimit) ? 'is-valid' : 'is-invalid'"/>
  </div> -->

                      <!-- Sign TX Button (once wallet has been unlocked) -->
                      <div class="form-group">
                        <a class="btn btn-rounded btn-info" ng-click="generateTx()" ng-show="wd" translate="DEP_signtx">
                          Sign Transaction
                        </a>
                      </div>

                      <!-- TXs -->
                      <section class="row" ng-show="showRaw">
                        <!-- Raw TX -->
                        <div class="form-group col-sm-6">
                          <h4 translate="SEND_raw">
                            Raw Transaction
                          </h4>
                          <textarea class="form-control" rows="4" readonly>{{rawTx}}</textarea>
                        </div>
                        <!-- Singed TX -->
                        <div class="form-group col-sm-6">
                          <h4 translate="SEND_signed">
                            Signed Transaction
                          </h4>
                          <textarea class="form-control" rows="4" readonly>{{signedTx}}</textarea>
                        </div>
                      </section>

                      <!-- Deploy Contract Button (once tx has been signed) -->
                      <div class="form-group" ng-show="showRaw">
                        <a class="btn btn-rounded btn-info" data-toggle="modal" data-target="#deployContract" translate="NAV_DeployContract">
                          Deploy Contract
                        </a>
                      </div>

                      <article class="modal fade" id="deployContract" tabindex="-1">
                        <section class="modal-dialog">
                          <section class="modal-content">

                            <div class="modal-body">
                              <button type="button" class="close" data-dismiss="modal" aria-label="Close Deploy Contract Dialog">&times;</button>

                              <h2 class="modal-title text-danger" translate="SENDModal_Title">
                                Warning!
                              </h2>

                              <p translate="CONTRACT_Warning_1">
                                You are about to <strong>deploy a contract</strong>.
                              </p>
                              <p>
                                <span translate="CONTRACT_Warning_2">
                                  It will be deployed on the following network:
                                </span>
                                <strong>{{ajaxReq.type}}</strong>.
                              </p>

                              <p> The <strong>{{ajaxReq.type}}</strong> node you are sending through is provided by <strong>{{ajaxReq.service}}</strong>.</p>

                              <h4 translate="SENDModal_Content_3"> Are you sure you want to do this? </h4>
                            </div>

                            <div class="modal-footer">
                              <button class="btn btn-rounded btn-info" data-dismiss="modal" aria-label="Close Deploy Contract Dialog" translate="SENDModal_No">
                                No, get me out of here!
                              </button>
                              <button class="btn btn-rounded btn-info" ng-click="sendTx()" translate="SENDModal_Yes">
                                Yes, I am sure! Make transaction.
                              </button>
                            </div>

                          </section>
                        </section>
                      </article>

                      <!--wallet decrypt-->
                      <article class="form-group" ng-show="(!wd && visibility=='deployView') || (!wd && visibility=='interactView' && contract.selectedFunc && !contract.functions[contract.selectedFunc.index].constant)">

                        <wallet-decrypt-drtv></wallet-decrypt-drtv>
                      </article>
                    </section>

                  </article>
                  <!-- / Deploy Contract -->

                  <!--wallet decrypt-->
                  <!-- <article class="form-group" ng-show="(!wd && visibility=='deployView') || (!wd && visibility=='interactView' && contract.selectedFunc && !contract.functions[contract.selectedFunc.index].constant)">

    <wallet-decrypt-drtv></wallet-decrypt-drtv>
  </article> -->

                  <article class="col-xs-12" ng-show="contract.selectedFunc!=null && visibility=='interactView'">

                    <button class="btn btn-rounded btn-info btn-block" ng-click="readFromContract()" ng-show="contract.functions[contract.selectedFunc.index].constant && showRead">
                      <span translate="CONTRACT_Read"> READ </span>
                    </button>

                    <button class="btn btn-rounded btn-info btn-block" ng-click="generateContractTx()" ng-show="!contract.functions[contract.selectedFunc.index].constant">
                      <span translate="CONTRACT_Write"> WRITE </span>
                    </button>

                    </br>
                  </article>

                </main>




              </div>


              <div data-ng-repeat="alert in notifier.alerts">
                <div class="alert popup alert-{{alert.type}} animated-show-hide" style="bottom: {{85*$index}}px; z-index: {{999+$index}};">
                  <div class="container">
                    <div class='alert-message' ng-bind-html="alert.message"></div>
                  </div>
                  <i class="icon-close" ng-click="alert.close()"></i>
                </div>
              </div>


            </section>



            <!-- <footer class="footer" role="content" aria-label="footer" ng-controller='footerCtrl'> -->



          </div>
        </div>
      </div>
    </div>


    <!-- </footer> -->



    </main>
    <script>
      var accountcheck;
      window.addEventListener('load', async () => {
        // Modern dapp browsers...
        if (window.ethereum) {
          window.web3 = new Web3(ethereum);
          try {
            // Request account access if needed
            await ethereum.enable();
            accountcheck = await web3.eth.getAccounts();
            // console.log(accountcheck);
            // window.web3.eth.net.getNetworkType().then(networkType => {
            //   if (networkType != 'main') {
            //     // console.log(networkType, "networkType")
            //   }
            //   // else {
            //   // getPaymentToken(window.web3.currentProvider.publicConfigStore.getState().selectedAddress);
            //   // }
            // });
            // web3.eth.sendTransaction({/* ... */ });
          } catch (error) {
            // User denied account access...
          }
        }
        // Legacy dapp browsers...
        else if (window.web3) {
          window.web3 = new Web3(web3.currentProvider);
          // Acccounts always exposed
          web3.eth.sendTransaction({/* ... */ });
        }
        // Non-dapp browsers...
        else {
          console.log('Non-Ethereum browser detected. You should consider trying XDCPay!');
        }
      });

      setInterval(async function () {
        let newaddress = await web3.eth.getAccounts();
        // console.log(newaddress[0], accountcheck[0]);
        if (accountcheck[0] !== newaddress[0] ) {
          accountcheck = newaddress
          // console.log("changed");
          location.reload();
        }else{
          // console.log("same");
        }
      }, 3000);
    </script>

</body>

</html>